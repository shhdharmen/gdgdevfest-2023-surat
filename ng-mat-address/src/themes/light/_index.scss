@use "@angular/material" as mat;
@use "./personal";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-light-primary: mat.define-palette(mat.$indigo-palette);
$app-light-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-light-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $app-light-primary,
      accent: $app-light-accent,
      warn: $app-light-warn,
    ),
    typography: mat.define-typography-config(),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include mat.all-component-themes($app-theme);
@include mat.core-theme($app-light-theme);
@include mat.card-theme($app-light-theme);
@include mat.form-field-theme($app-light-theme);
@include mat.input-theme($app-light-theme);
@include mat.select-theme($app-light-theme);
@include mat.autocomplete-theme($app-light-theme);
@include mat.radio-theme($app-light-theme);
@include mat.button-theme($app-light-theme);
@include mat.icon-button-theme($app-light-theme);
@include mat.icon-theme($app-light-theme);
@include mat.menu-theme($app-light-theme);
